Index: src/controllers/chats_controller.py
===================================================================
diff --git a/src/controllers/chats_controller.py b/src/controllers/chats_controller.py
deleted file mode 100644
--- a/src/controllers/chats_controller.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,26 +0,0 @@
-from typing import Union
-
-from src.core.use_cases import UsersUseCase
-from src.core.entities import ChatHistory, ChatHistoryPage
-
-
-class ChatsController:
-    def __init__(self, users_use_case: UsersUseCase) -> None:
-        self._users_use_case = users_use_case
-
-    async def get_chat_history(
-            self,
-            user_id: int,
-            is_paginated: bool,
-            page: int,
-            limit: int
-    ) -> Union[ChatHistory, ChatHistoryPage]:
-        if is_paginated:
-            chat_history_page = await self._users_use_case.get_page_of_chat_history(
-                user_id=user_id,
-                page=page,
-                limit=limit
-            )
-            return chat_history_page
-        chat_history = await self._users_use_case.get_chat_history(user_id)
-        return chat_history
Index: src/http/__init__.py
===================================================================
diff --git a/src/http/__init__.py b/src/http/__init__.py
deleted file mode 100644
--- a/src/http/__init__.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,5 +0,0 @@
-__all__ = (
-    "HTTPClient"
-)
-
-from src.http.http_client import HTTPClient
Index: src/apis/auth_api.py
===================================================================
diff --git a/src/apis/auth_api.py b/src/apis/auth_api.py
deleted file mode 100644
--- a/src/apis/auth_api.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,36 +0,0 @@
-import logging
-
-from src.http import HTTPClient
-from src.apis.exceptions import APIException
-
-
-log = logging.getLogger(__name__)
-
-
-class AuthAPI:
-    def __init__(self, base_url: str) -> None:
-        self._base_url = base_url
-
-    async def check_user_exists_by_phone_number(self, phone_number: str) -> bool:
-        url = f"{self._base_url}/getnumber/{phone_number}"
-        headers = {"Content-Type": "application/json; charset=UTF-8"}
-        is_user_exists: bool = False
-        try:
-            async with HTTPClient() as http_client:
-                response = await http_client.get(
-                    url=url,
-                    headers=headers
-                )
-            if response is None:
-                log.warning("Service not allowed")
-                return is_user_exists
-            log.debug(
-                "Successfully receive response %s for user with phone number %s",
-                response, phone_number
-            )
-            is_user_exists = response["body"]
-        except APIException as ex:
-            log.error(ex)
-            raise ex
-        finally:
-            return is_user_exists
Index: src/apis/exceptions.py
===================================================================
diff --git a/src/apis/exceptions.py b/src/apis/exceptions.py
deleted file mode 100644
--- a/src/apis/exceptions.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,5 +0,0 @@
-
-
-class APIException(Exception):
-    """API error such as server error or timeout error"""
-    pass
Index: src/controllers/__init__.py
===================================================================
diff --git a/src/controllers/__init__.py b/src/controllers/__init__.py
deleted file mode 100644
--- a/src/controllers/__init__.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,11 +0,0 @@
-__all__ = (
-    "NotificationController",
-    "ChatsController",
-    "UsersController",
-    "ChatBotController"
-)
-
-from src.controllers.notification_controller import NotificationController
-from src.controllers.chats_controller import ChatsController
-from src.controllers.users_controller import UsersController
-from src.controllers.chatbot_controller import ChatBotController
Index: src/controllers/users_controller.py
===================================================================
diff --git a/src/controllers/users_controller.py b/src/controllers/users_controller.py
deleted file mode 100644
--- a/src/controllers/users_controller.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,21 +0,0 @@
-from aiogram.types import Message
-
-from src.core.use_cases import UsersUseCase
-from src.mappers import UserMapper, ContactMapper
-from src.presenters import StartPresenter, ShareContactPresenter
-
-
-class UsersController:
-    def __init__(self, users_use_case: UsersUseCase) -> None:
-        self._users_use_case = users_use_case
-
-    async def register_after_start(self, message: Message) -> None:
-        user = UserMapper.from_message(message)
-        await self._users_use_case.register(user)
-        await StartPresenter(message).present()
-
-    async def share_contact(self, message: Message) -> None:
-        contact = ContactMapper.from_message(message)
-        await self._users_use_case.share_contact(contact)
-        is_user_exist = await self._users_use_case.check_exist(message.from_user.id)
-        await ShareContactPresenter(message).present(is_user_exist)
Index: src/apis/chatbot_api.py
===================================================================
diff --git a/src/apis/chatbot_api.py b/src/apis/chatbot_api.py
deleted file mode 100644
--- a/src/apis/chatbot_api.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,34 +0,0 @@
-import logging
-from typing import Optional
-
-from src.http import HTTPClient
-from src.apis.exceptions import APIException
-
-
-log = logging.getLogger(__name__)
-
-
-class ChatBotAPI:
-    def __init__(self, base_url: str) -> None:
-        self._base_url = base_url
-    
-    async def answer(self, question: str) -> Optional[str]:
-        url = f"{self._base_url}/chatbot/"
-        headers = {"Content-Type": "application/json; charset=UTF-8"}
-        json = {"question": question}
-        try:
-            async with HTTPClient() as http_client:
-                response = await http_client.post(
-                    url=url,
-                    headers=headers,
-                    json=json
-                )
-            answer = response.get("answer")
-            log.debug(
-                "Successfully receive answer %s on question %s",
-                answer, question
-            )
-            return answer
-        except APIException as ex:
-            log.error(ex)
-            raise ex
Index: src/controllers/chatbot_controller.py
===================================================================
diff --git a/src/controllers/chatbot_controller.py b/src/controllers/chatbot_controller.py
deleted file mode 100644
--- a/src/controllers/chatbot_controller.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,16 +0,0 @@
-from aiogram.types import Message
-
-from src.core.use_cases import ChatBotUseCase
-from src.presenters import ChatBotPresenter
-
-
-class ChatBotController:
-    def __init__(self, chatbot_use_case: ChatBotUseCase) -> None:
-        self._chatbot_use_case = chatbot_use_case
-
-    async def answer(self, message: Message) -> None:
-        await message.bot.send_chat_action(message.chat.id, "typing")
-        user_id = message.from_user.id
-        user_message = message.text
-        chatbot_message = await self._chatbot_use_case.answer(user_message, user_id=user_id)
-        await ChatBotPresenter(message).present(chatbot_message)
Index: src/http/http_requests.py
===================================================================
diff --git a/src/http/http_requests.py b/src/http/http_requests.py
deleted file mode 100644
--- a/src/http/http_requests.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,40 +0,0 @@
-from typing import TYPE_CHECKING, Optional
-
-if TYPE_CHECKING:
-    from aiohttp import ClientSession, ClientResponse
-
-
-class HTTPRequests:
-    _session: "ClientSession"
-
-    @staticmethod
-    def is_ok(response: "ClientResponse") -> bool:
-        return 200 <= response.status < 300
-
-    async def get(
-            self,
-            url: str,
-            headers: Optional[dict] = None,
-            timeout: int = 10
-    ) -> dict | None:
-        async with self._session.get(
-            url=url,
-            headers=headers,
-            timeout=timeout
-        ) as response:
-            if self.is_ok(response):
-                return await response.json()
-
-    async def post(
-            self,
-            url: str,
-            json: dict,
-            headers: Optional[dict] = None
-    ) -> dict | None:
-        async with self._session.post(
-            url=url,
-            json=json,
-            headers=headers
-        ) as response:
-            if self.is_ok(response):
-                return await response.json()
Index: src/http/http_client.py
===================================================================
diff --git a/src/http/http_client.py b/src/http/http_client.py
deleted file mode 100644
--- a/src/http/http_client.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,6 +0,0 @@
-from src.http.base_http import BaseHTTP
-from src.http.http_requests import HTTPRequests
-
-
-class HTTPClient(HTTPRequests, BaseHTTP):
-    pass
Index: src/controllers/notification_controller.py
===================================================================
diff --git a/src/controllers/notification_controller.py b/src/controllers/notification_controller.py
deleted file mode 100644
--- a/src/controllers/notification_controller.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,16 +0,0 @@
-from src.core.use_cases import NotificationUseCase
-from src.schemas import DeliveredResponse, DeliveredResponsePresenter
-from src.core.entities import NotificationAll, NotificationByPhoneNumber
-
-
-class NotificationController:
-    def __init__(self, notification_use_case: NotificationUseCase) -> None:
-        self._notification_use_case = notification_use_case
-
-    async def notify_all(self, notification: NotificationAll) -> DeliveredResponse:
-        is_delivered = await self._notification_use_case.notify_all(notification)
-        return DeliveredResponsePresenter(is_delivered).present()
-
-    async def notify_by_phone_number(self, notification: NotificationByPhoneNumber) -> DeliveredResponse:
-        is_delivered = await self._notification_use_case.notify(notification)
-        return DeliveredResponsePresenter(is_delivered).present()
Index: src/http/base_http.py
===================================================================
diff --git a/src/http/base_http.py b/src/http/base_http.py
deleted file mode 100644
--- a/src/http/base_http.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,19 +0,0 @@
-from typing import Optional
-
-from aiohttp import ClientSession
-
-
-class BaseHTTP:
-    def __init__(self) -> None:
-        self._session: Optional[ClientSession] = None
-
-    async def http_session(self) -> None:
-        self._session = ClientSession()
-
-    async def __aenter__(self) -> "BaseHTTP":
-        await self.http_session()
-        return self
-
-    async def __aexit__(self, exc_type, exc_val, exc_tb) -> None:
-        await self._session.close()
-        self._session = None
Index: src/apis/__init__.py
===================================================================
diff --git a/src/apis/__init__.py b/src/apis/__init__.py
deleted file mode 100644
--- a/src/apis/__init__.py	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
+++ /dev/null	(revision 59a7adc1b992b3efcd83981337fb866742d4ac8c)
@@ -1,7 +0,0 @@
-__all__ = (
-    "ChatBotAPI",
-    "AuthAPI"
-)
-
-from src.apis.chatbot_api import ChatBotAPI
-from src.apis.auth_api import AuthAPI
